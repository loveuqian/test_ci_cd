name: "IOS upload alpha"

on:
  push:
    branches:
      - "test-*"

jobs:
  build:
    runs-on: macOS-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2

      - name: "Set up Ruby 2.6"
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x

      - name: "Install gem Dependencies"
        run: gem install bundler && bundle install

      - name: "Xcode install"
        run: sudo xcode-select -switch /Applications/Xcode_11.5.app

      - name: "Pod install"
        run: "pod install"

      - name: "Fastlane recheck"
        run: "fastlane -v"

      # - name: "Run tests"
      #   run: "sh ./.github/scripts/tests_app.sh"

      - name: "Fastlane inc number"
        run: "bundle exec fastlane inc"

      - name: "Grant permissions"
        run: sh ./.github/scripts/grant_permissions.sh

      - name: "Run get certificates"
        run: bundle exec fastlane get_certificates_or_generate

      - name: "Build app"
        run: bundle exec fastlane buildling_app

      - name: "Deploy TestFlight"
        run: bundle exec fastlane deploy

      - name: "Get latest tag name"
        id: get_version
        uses: WyriHaximus/github-action-get-previous-tag@master

      - name: "Get commit"
        id: commit
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
          echo ::set-output name=body::${str##*\\n} | tr -d '"'
      
      - name: "Create Release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          release_name: Release ${{ steps.get_version.outputs.tag }}
          body: |
              "${{ steps.commit.outputs.title}}"
              Changes in this Release:
              "${{ steps.commit.outputs.body}}"
          draft: false
          prerelease: false


      - name: "Upload Release Asset"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assembles/${{ steps.get_version.outputs.tag }}.zip
          asset_name: ${{ steps.get_version.outputs.tag }}
          asset_content_type: application/zip