
      - name: "Run tests"
        run: 
          
        with:
          java-version: 1.8

      - name: "Install NDK"
        run: echo "y" | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}

      - name: "Grant permissions to gradle"
        run: chmod a+x ./gradlew

      - name: "Build app bundle"
        run: ./gradlew clean bundlePreprodDebug --stacktrace

      - name: "Rename version"
        run: bundle exec fastlane rename_version_alpha

      - name: "Get tag name"
        uses: olegtarasov/get-tag@v2
        id: tagName
        with:
          tagRegex: "(.*)/(.*)"
          tagRegexGroup: 2

      - name: "get commit"
        id: commit
        run: |
          str="$(jq '.head_commit.message' $GITHUB_EVENT_PATH)"
          echo ::set-output name=title::${str%%\\n*} | tr -d '"'
          echo ::set-output name=body::${str##*\\n} | tr -d '"'

      - name: "Create Release"
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.tagName.outputs.tag}}
          release_name: Release ${{steps.tagName.outputs.tag}}
          body: |
            "${{ steps.commit.outputs.title}}"
            Changes in this Release:
            "${{ steps.commit.outputs.body}}"
          draft: false
          prerelease: false

      - name: "Upload Release Asset"
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/bundle/preprodDebug/app-preprod-debug.aab
          asset_name: app-preprod-debug.aab
          asset_content_type: application/zip

          lbgo-iufh-ydpg-pqhv




    get_certificates(
      keychain_path: ENV["CERT_KEYCHAIN_PATH"],
      generate_apple_certs: true,
      username: ENV["FASTLANE_USER"],
      team_id: ENV["TEAM_ID"],
      team_name: ENV["TEAM_NAME"]
    )

    get_provisioning_profile(
      app_identifier: ENV["APP_IDENTIFIER"],
      username: ENV["FASTLANE_USER"],
      team_id: ENV["TEAM_ID"],
      team_name: ENV["TEAM_NAME"],
    )

        run: bundle exec fastlane deploy
